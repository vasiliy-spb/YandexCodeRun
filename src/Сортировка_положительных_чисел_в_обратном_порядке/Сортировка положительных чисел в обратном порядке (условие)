Сортировка положительных чисел в обратном порядке (разминка)

    бэкендлегкая

Разработчики бэкенда часто взаимодействуют с многочисленными API и дополнительно обрабатывают результаты. Сейчас вам придётся сделать именно это!

Во входном файле четыре строчки. В первой находится адрес сервера, во второй — номер порта. В следующих двух строках записаны два целых 32-разрядных числа: aa и bb. Необходимо осуществить GET-запрос к серверу по указанному номеру порта, передав значения чисел aa и bb в значениях одноименных CGI-параметров. Сервер ответит JSON-массивом из целых чисел. Необходимо отсортировать числа в порядке невозрастания и распечатать в выходной файл положительные — по одному числу в строке.

Гарантируется, что общее количество чисел в ответе не превосходит 100, при этом каждое из них — 32-разрядное знаковое целое число.

Это разминочная задача, к которой мы размещаем готовое решения, чтобы вы могли познакомиться с нашей автоматической системой проверки решений. Ввод и вывод осуществляется через файлы, либо через стандартные потоки ввода-вывода, как вам удобнее.

Примеры решений:

GNU c++ 11 + network + libcurl + json.

Python 3.7 + network + requests.

Java 8 + network + json-simple.

Golang 1.14.4 + network.
Формат ввода

Строка — URL сервера. \ Целое число — порт сервера. \ Целое число — число aa. \ Целое число — число bb.
Формат вывода

Целые положительные числа, отсортированные по невозрастанию, из списка в ответе сервера, по одному в строке.
Примечание

Для решений на языке python доступны библиотеки json, requests и urllib.

Для решений на языке Java доступна библиотека json-simple версии 1.1.1. Соответствующие import'ы могут выглядеть так:

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

Для решений на языке C++ доступны библиотеки libcurl v7.47.0 и nlohmann/json v3.8.0. Соответствующие include выглядят так:

#include <curl/curl.h>
#include "json.hpp"

Для решений на golang доступны все стандартные пакеты, включая encoding/json, net/http, sort и другие.

Для решений на C# доступны библиотеки System.Text.Json и Newtonsoft.Json. Соответствующие using могут выглядеть так:

using Newtonsoft.Json;
using System.Text.Json;

Пример ответа сервера для первого теста:

curl "http://127.0.0.1:7777?a=2&b=4"
[
  8,
  6,
  -2,
  2,
  4,
  17,
  256,
  1024,
  -17,
  -19
]

Пример 1
Ввод

http://127.0.0.1
7777
2
4

Вывод

1024
256
17
8
6
4
2


